swagger: "2.0"
info:
  title: "Contract Management API"
  description: "This is the Contract Management API server."
  version: "0.0.1"
basePath: "/v1"
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
  ApiKeyAuth:
    type: apiKey
    in:   header
    name: X-User-Token
paths:
  /users:
    post:
      summary: "create an account on the service"
      parameters:
      - in: "body"
        name: "user"
        required: true
        schema:
          type: "object"
          required:
           - "full_name"
           - "email"
           - "password"
          properties:
            full_name:
              type: "string"
              example: "Chikahiro Tokoro"
            email:
              type: "string"
              example: "test@example.com"
            password:
              type: "string"
              format: "password"
              example: "R4YiI1VtPt2iX"
      responses:
        201:
          description: "Success to create an account"
          schema:
            type: "object"
            required:
              - "token"
            properties:
              token:
                type: "string"
                example: "XXXX7ihJt4vE3EKmSqdDXXXX"
        400:
          description: "Invalid Request"
          schema:
            $ref: "#/definitions/ErrorModel"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/ErrorModel"
  /current_user:
    get:
      summary: "retrive current user detail"
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: "Success to retrive current user detail"
          schema:
            type: "object"
            required:
             - "user_id"
             - "full_name"
             - "email"
            properties:
              user_id:
                type: "string"
                example: "100"
              full_name:
                type: "string"
                example: "Chikahiro Tokoro"
              email:
                type: "string"
                example: "test@example.com"
        401:
          description: Authentication information is missing or invalid
          schema:
            type: 'object'
  /contracts:
    post:
      security:
        - basicAuth: []
      summary: "create a contract"
      parameters:
      - in: "body"
        name: "contract"
        required: true
        schema:
          $ref: "#/definitions/Contract"
      responses:
        201:
          description: "Success to create a contract"
          schema:
            type: "object"
            required:
             - "contract_id"
            properties:
              contract_id:
                type: "string"
                example: "150"
        400:
          description: "Invalid Request"
          schema:
            $ref: "#/definitions/ErrorModel"
        401:
          $ref: "#/responses/UnauthorizedError"
  /contracts/{contract_id}:
    get:
      security:
        - basicAuth: []
      summary: "Show the contract detail"
      parameters:
      - in: "path"
        name: "contract_id"
        required: true
        type: "string"
      responses:
        200:
          description: "Success to show the contract detail"
          schema:
            $ref: "#/definitions/ContractWithId"
        404:
          description: "Requested contract is not found"
          schema:
            $ref: "#/responses/NotFoundError"
        401:
          $ref: "#/responses/UnauthorizedError"
    delete:
      security:
        - basicAuth: []
      summary: "delete the contract"
      parameters:
      - in: "path"
        name: "contract_id"
        required: true
        type: "string"
      responses:
        204:
          description: "Success to delete the contract"
          schema:
            $ref: "#/definitions/ContractWithId"
        404:
          description: "Requested contract is not found"
          schema:
            $ref: "#/responses/NotFoundError"
        401:
          $ref: "#/responses/UnauthorizedError"
definitions:
  Contract:
    type: "object"
    required:
     - "vendor"
     - "starts_on"
     - "ends_on"
     - "price"
    properties: &contract_properties
      vendor:
        type: "string"
        example: "Vodafone"
      starts_on:
        type: "string"
        format: "date"
        example: "2017-12-01"
      ends_on:
        type: "string"
        format: "date"
        example: "2018-01-31"
      price:
        type: "number"
        format: "double"
        example: "119.99"
  ContractWithId:
    type: "object"
    required:
     - "contract_id"
     - "vendor"
     - "starts_on"
     - "ends_on"
     - "price"
    properties:
      contract_id:
        type: "string"
        example: "150"
      <<: *contract_properties
  ErrorModel:
    type: "object"
    required:
      - "error_messages"
    properties:
      error_messages:
        type: array
        items:
          type: "string"
responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
  NotFoundError:
    description: Requested resource is not found
